#version 460 core

layout (local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

// ----------------------------------------------------------------------------
//
// uniforms
//
// ----------------------------------------------------------------------------

layout(rgba32f, binding = 0) uniform image2D imgOutput;

uniform sampler2D u_texture;

// ----------------------------------------------------------------------------
//
// functions
//
// ----------------------------------------------------------------------------



void main() {
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);


    float x = float(texelCoord.x)/(gl_NumWorkGroups.x * 8);
    float y = float(texelCoord.y)/(gl_NumWorkGroups.y * 4);
	    
    vec2 TexCoords = vec2(x,y);

    
    vec2 texelSize = 1.0 / vec2(textureSize(u_texture, 0));
 
    vec2 offset;
    float result = 0;

   offset = vec2(float(-2), float(-2)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(-2), float(-1)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(-2), float(0)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(-2), float(1)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;

   
   offset = vec2(float(-1), float(-2)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(-1), float(-1)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(-1), float(0)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(-1), float(1)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;

   
   offset = vec2(float(0), float(-2)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(0), float(-1)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(0), float(0)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(0), float(1)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;

   
   offset = vec2(float(1), float(-2)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(1), float(-1)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(1), float(0)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;
   offset = vec2(float(1), float(1)) * texelSize;
   result += texture(u_texture, TexCoords + offset).r;


    imageStore(imgOutput, texelCoord, vec4(vec3(result/16.F),1));
}
